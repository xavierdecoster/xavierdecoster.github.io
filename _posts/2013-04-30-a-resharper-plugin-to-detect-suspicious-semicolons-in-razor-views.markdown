---
layout: single
title: "A ReSharper plugin to detect suspicious semicolons in Razor views"
date: 2013-04-30 17:06:00 +0200
comments: true
published: true
categories: ["post"]
tags: []
alias: ["/2013/04/30/a-resharper-plugin-to-detect-suspicious-semicolons-in-razor-views/"]
author: Xavier Decoster
redirect_from:
 - /2013/04/30/a-resharper-plugin-to-detect-suspicious-semicolons-in-razor-views/.html
 - /2013/04/30/a-resharper-plugin-to-detect-suspicious-semicolons-in-razor-views/.html
---
<p><p>I must admit, every now and then I find myself typing yet another semicolon in one of my razor views. I usually also hit the backspace key immediately after. But sometimes, a lone wolf semicolon gets through and is rendered in the resulting HTML page. I HATE this! It's the most silly bug report you'll ever spend time on. The effort-value ratio of filing the bug and resolving it is far below zero, but as it is a UI issue it most likely will get prioritized over other more important stuff. It's still waste. <a href="http://www.jetbrains.com/resharper/">ReSharper</a> is great at reducing waste, so I figured it'd be a good idea to have a ReSharper code inspection to highlight these semicolons and generate warnings. To my surprise I found this wasn't built-in so the idea of a plug-in was born.
</p><p>I've built <a href="https://github.com/xavierdecoster/Resharper-XML-Minifier">a very simple XML-minification plug-in for ReSharper</a> before, but didn't really plan the time for building another one. The <a href="http://www.jetbrains.com/resharper/download/">ReSharper SDK</a> is quite awesome, though it could use some more loose-coupling and perhaps be <em>NuGetized</em>? I popped the idea on Twitter to see if people would think it's useful or not, and in the hopes to find someone who had the time or was willing to assist. A huge thanks to Matt Ellis (<a href="https://twitter.com/citizenmatt">@citizenmatt</a>) and Igal Tabachnik (<a href="https://twitter.com/hmemcpy">@hmemcpy</a>) for your enthousiasm and sharing some very useful <a href="http://t.co/M369JEySWS">pointers</a> on how this plug-in could be implemented! Your input made it look like a no-brainer so I figured it couldn't harm to spend half-an-hour on it.
</p><p>The idea was to build a custom <a href="http://confluence.jetbrains.com/display/ReSharper/2.4+Daemons+and+Daemon+Stages+(R7)"><em>daemon</em></a> to analyze HTML <em>tokens</em> within a Razor file. Razor files can contain HTML, JavaScript, Razor-syntax, C#, CSSâ€¦ and hence are considered a <a href="http://confluence.jetbrains.com/display/ReSharper/3.4+Multi-Language+PSI+(R7)">multi-language PSI</a> file. Bear with me, it's actually pretty straightforward and there's a great sample daemon implementation included in the SDK as well. It's a matter of understanding the concepts, reading the sample code, writing some similar code and hitting F5 a few times to debug your own implementation. This plug-in is only 5 classes!
</p><p>The SDK comes with a set of project and item-templates, pre-configured to provide the necessary "devenv.exe /ReSharper.Internal" instructions to unlock some ReSharper internal utilities in the Visual Studio instance you'll be debugging. The PSI Browser is a kind of document explorer and provides a ton of information on each element, character and its context within the file.
</p><p>That's how I found out I only needed to inspect the HTML tokens. It also showed me that a <em>whitespace</em> character is a separate token, thus splitting up HTML tokens containing text. Finding the <em>suspicious semicolon</em> (usually at the end of a Razor statement and at the beginning of meaningful HTML tokens) is as easy as finding the HTML token that only contains a single semicolon character. This covers about 95% of semicolon mistakes I believe, which is good enough for me at the moment. I also didn't want this plug-in to generate warnings for the semicolon character in code snippets, in <a href="http://www.w3schools.com/tags/ref_entities.asp">HTML entities</a> (such as <em>&amp;copy; </em>for instance), or in smileys ;-).
</p><p>This plug-in will provide warnings and highlighting when a suspicious semicolon has been detected in a Razor view, and a quick-fix to get rid of it ALT-ENTER-style.
</p><p><img src="/get/040913_0959_AReSharperp1_635010983939422428.jpg" alt="" style="max-width:600px;"/>
    </p><p>Just file an issue on my <a href="https://github.com/xavierdecoster/ReSharper.RazorExtensions">GitHub repo</a> if you find something fishy, and note that I accept pull requests (and will happily add your name to the Author's tag of the NuGet package that this plug-in will ship in).
</p><p>JetBrains just <a href="http://blogs.jetbrains.com/dotnet/2013/04/new-features-in-the-latest-resharper-8-ea/" target="_blank">announced</a> the new ReSharper Extension Manager using a NuGet feed which is now <a href="http://blog.myget.org/post/2013/04/29/Create-a-list-of-favorite-ReSharper-plugins.aspx" target="_blank">also available as a package source preset on MyGet</a>. For those interested: I've hooked up my GitHub repository with my <a href="http://www.myget.org">MyGet</a> feed's POST hook, so I can automatically package-n-publish the plug-in for testing and release it with a click of a button. I'll do a follow-up post on how I did this, but for those who can't wait, there's useful info in <a href="http://blog.myget.org/post/2013/03/06/MyGet-Build-Services-Package-Versioning-Explained.aspx">this blog post</a> (I'm using a <a href="https://github.com/xavierdecoster/ReSharper.RazorExtensions/blob/master/build.bat">build.bat</a> file to hook into the build process).
</p><p>
To install my ReSharper extension, you need ReSharper 8 EAP or higher. For those on an earlier version of ReSharper, check for a compatible download in my GitHub repository.</p>
<img src="https://xavierdecosterblog.blob.core.windows.net/blog/2013-04-30/2013-04-29_1901.png" style="max-width:600px"/></p>

<p>Installing ReSharper plug-ins shipped as NuGet packages and get notifications about available updates: killer feature if you ask me!</p>
